1.Why is Java a platform independent language?

Java is a platform independent language Because it does not depend on any type of platform .Java compiler can convert source into byte code, which is the intermediate language. Byte code can be execute any of the platform.


2.What do you understand by an instance variable and a local variable?

Instance Variable : Instance variable is declared in a class and outside the method, It can invoke to any other method in a class.
Local variable : Local variable is declared within the method, It can acces only in the particular given method.
      
     
3.Can we overload main method in Java

We can overload the main method in java but JVM can calls only the original main method. It cannot calls the overloadded main method in java.


4.What are the access modifiers available in java

There are four Access modifiers in java are:
           1.Private
           2.Default
           3.Protected
           4.Public.


5.How will you call a non static method from main method in java

We can call the non-static method from static method by creating a instance of the class belongs to the method.


6.Why String is immutable in java?

The String is immutable in Java because of the security, synchronization and concurrency, caching, and class loading. The reason of making string final is to destroy the immutability and to not allow others to extend it.
The String objects are cached in the String pool, and it makes the String immutable.
          
          
7.What is the difference between concat() and concatenation  operator "+" ?

Concat()  :It takes only one argument in a method to concatenation with other string.

The Java String concat() method of String class has been itself present inside java.util package concatenates one string to the end of another string. This method returns a string with the value of the string passed into the method, appended to the end of the string.

// Java Program to Demonstrate Working of concat() method

// Main class
class GFG {

	// Main driver method
	public static void main(String args[])
	{
		// Custom input string 1
		String s = "Geeks ";

		// Custom input string 2 is passed as in arguments
		// Here we are adding it to end of same string
		s = s.concat("for Geeks");

		// Printing the concatenated string
		System.out.println(s);
	}
}

+      : It can take more number of arguments to concatenate.

+ operator is used for concatenating strings on either side and is used just likely we are up to adding two numbers, henceforth providing us the flexibility to add on either side. 

// Java Program to Demonstrate Working of + Operator
// over Strings

// Main class
class GFG {

	// Main driver method
	public static void main(String args[])
	{
		// Custom input strings
		String s1 = " Geeks ";
		String s2 = " for Geeks ";

		// Now using + operator over string where
		// flexibility is provided to add on either side
		String s3 = s1 + s2;
		String s4 = s2 + s1;

		// Printing strings formed after
		// using + operator
		System.out.println(s3);
		System.out.println(s4);
	}
}

